version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '3000:3000'
environment:
  - NODE_ENV=production
  - DB_HOST=postgres
  - DB_PORT=5432
  - DB_USERNAME=postgres
  - DB_PASSWORD=postgres
  - DB_DATABASE=streambet
  - JWT_SECRET=${JWT_SECRET}
  - JWT_EXPIRES_IN=1d
  - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
  - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
  - GOOGLE_CALLBACK_URL=${GOOGLE_CALLBACK_URL}
  - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
  - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
  - REDIS_HOST=redis
  - REDIS_PORT=6379
  - AWS_SMTP_USER=${AWS_SMTP_USER}
  - AWS_SMTP_PASSWORD=${AWS_SMTP_PASSWORD}
  - AWS_SMTP_HOST=${AWS_SMTP_HOST}
  - AWS_SMTP_PORT=${AWS_SMTP_PORT}
  - MAIL_DEFAULT_NAME=${MAIL_DEFAULT_NAME}
  - MAIL_DEFAULT_EMAIL=${MAIL_DEFAULT_EMAIL}
  - MAIL_SECURE=${MAIL_SECURE}
  - AWS_SMTP_REGION=${AWS_SMTP_REGION}
  - MAIL_REQUIRE_TLS=${MAIL_REQUIRE_TLS}
  - AWS_EMAIL_FROM=${AWS_EMAIL_FROM}
  - HOSTED=${HOSTED}
  - APP_HOST_URL=${APP_HOST_URL}

    depends_on:
      - postgres
      - redis
    networks:
      - streambet-network

  postgres:
    image: postgres:14-alpine
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=streambet
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - streambet-network

  redis:
    image: redis:alpine
    ports:
      - '6379:6379'
    volumes:
      - redis-data:/data
    networks:
      - streambet-network

networks:
  streambet-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data: 